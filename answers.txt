Ответы на вопросы

1. Процесс распространения событий в JavaScript (Event Propagation)
-------------------------------------------------------------------
В JavaScript события распространяются через механизм, называемый "всплытие" и "погружение". Процесс делится на три фазы:

1. Фаза погружения (capturing phase)  
   Событие начинается с корневого элемента (document), проходит через все вложенные элементы вниз до цели.

2. Целевая фаза (target phase)  
   Событие достигает элемента, на котором оно было вызвано.

3. Фаза всплытия (bubbling phase)  
   Событие поднимается от целевого элемента обратно вверх по дереву DOM к корню.

Применение на практике:
- Использование { capture: true } при addEventListener для обработки событий на фазе погружения.
- Делегирование событий: вешаем обработчик на родительский элемент и обрабатываем события дочерних (экономия ресурсов).
- Предотвращение всплытия с помощью event.stopPropagation().


2. Promise и асинхронность
--------------------------
Promise — это объект, представляющий результат асинхронной операции.  
Он может находиться в одном из трёх состояний:
- pending (ожидание),
- fulfilled (успешно выполнен),
- rejected (с ошибкой).

Работа с промисами строится через .then(), .catch(), .finally().


3. ООП (Объектно-Ориентированное Программирование)
-------------------------------------------------
ООП — парадигма программирования, основанная на работе с объектами.  
Ключевые принципы:
1. Инкапсуляция — скрытие внутреннего состояния объекта ( private поля в JS через #).
2. Наследование — создание классов на основе других ( class Admin extends User).
3. Полиморфизм — разные объекты могут по-разному реализовывать один и тот же метод.
4. Абстракция — выделение только значимых характеристик (интерфейсы в TS, абстрактные классы).
